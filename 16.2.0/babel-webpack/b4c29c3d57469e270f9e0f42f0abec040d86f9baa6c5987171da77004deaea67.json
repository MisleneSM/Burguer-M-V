{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/misle/Desktop/Burguer-M-V/my-first-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nvar UserRole;\n(function (UserRole) {\n  UserRole[\"Waiter\"] = \"waiter\";\n  UserRole[\"Chef\"] = \"chef\";\n  UserRole[\"Admin\"] = \"admin\";\n})(UserRole || (UserRole = {}));\nexport let LoginComponent = class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.email = '';\n    this.password = '';\n    this.errorLogin = false;\n  }\n  onLogin() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.errorLogin = false;\n        const userLoggedIn = yield _this.authService.login(_this.email, _this.password);\n        if (userLoggedIn) {\n          const userRole = localStorage.getItem('userRole');\n          _this.navigateToRole(userRole);\n        } else {\n          _this.handleLoginError();\n        }\n      } catch (error) {\n        console.error('Erro no login:', error);\n        _this.handleLoginError();\n      }\n    })();\n  }\n  navigateToRole(role) {\n    switch (role) {\n      case UserRole.Waiter:\n        this.router.navigate(['/menu']);\n        break;\n      case UserRole.Chef:\n        this.router.navigate(['/kitchen']);\n        break;\n      case UserRole.Admin:\n        this.router.navigate(['/admin']);\n        break;\n      default:\n        throw new Error('Role inválida');\n    }\n  }\n  handleLoginError() {\n    this.errorLogin = true;\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","UserRole","LoginComponent","constructor","authService","router","email","password","errorLogin","onLogin","_this","_asyncToGenerator","userLoggedIn","login","userRole","localStorage","getItem","navigateToRole","handleLoginError","error","console","role","Waiter","navigate","Chef","Admin","Error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\misle\\Desktop\\Burguer-M-V\\my-first-project\\src\\app\\components\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n\nenum UserRole {\n  Waiter = 'waiter',\n  Chef = 'chef',\n  Admin = 'admin'\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  email: string = '';\n  password: string = '';\n  errorLogin: boolean = false;\n\n  constructor(private authService: AuthService, private router: Router) {}\n  \n  async onLogin() {\n    try {\n      this.errorLogin = false;\n      const userLoggedIn = await this.authService.login(this.email, this.password);\n      \n      if (userLoggedIn) {\n        const userRole = localStorage.getItem('userRole') as UserRole;\n        this.navigateToRole(userRole);\n      } else {\n        this.handleLoginError();\n      }\n    } catch (error) {\n      console.error('Erro no login:', error);\n      this.handleLoginError();\n    }\n  }\n  \n  private navigateToRole(role: UserRole) {\n    switch (role) {\n      case UserRole.Waiter:\n        this.router.navigate(['/menu']);\n        break;\n      case UserRole.Chef:\n        this.router.navigate(['/kitchen']);\n        break;\n      case UserRole.Admin:\n        this.router.navigate(['/admin']);\n        break;\n      default:\n        throw new Error('Role inválida');\n    }\n  }\n  \n  private handleLoginError() {\n    this.errorLogin = true;\n  }\n}\n\n\n\n\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,eAAe;AAIzC,IAAKC,QAIJ;AAJD,WAAKA,QAAQ;EACXA,QAAA,qBAAiB;EACjBA,QAAA,iBAAa;EACbA,QAAA,mBAAe;AACjB,CAAC,EAJIA,QAAQ,KAARA,QAAQ;AAWN,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAKzBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAJ5D,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,UAAU,GAAY,KAAK;EAE4C;EAEjEC,OAAOA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACX,IAAI;QACFD,KAAI,CAACF,UAAU,GAAG,KAAK;QACvB,MAAMI,YAAY,SAASF,KAAI,CAACN,WAAW,CAACS,KAAK,CAACH,KAAI,CAACJ,KAAK,EAAEI,KAAI,CAACH,QAAQ,CAAC;QAE5E,IAAIK,YAAY,EAAE;UAChB,MAAME,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAa;UAC7DN,KAAI,CAACO,cAAc,CAACH,QAAQ,CAAC;SAC9B,MAAM;UACLJ,KAAI,CAACQ,gBAAgB,EAAE;;OAE1B,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;QACtCT,KAAI,CAACQ,gBAAgB,EAAE;;IACxB;EACH;EAEQD,cAAcA,CAACI,IAAc;IACnC,QAAQA,IAAI;MACV,KAAKpB,QAAQ,CAACqB,MAAM;QAClB,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QAC/B;MACF,KAAKtB,QAAQ,CAACuB,IAAI;QAChB,IAAI,CAACnB,MAAM,CAACkB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;QAClC;MACF,KAAKtB,QAAQ,CAACwB,KAAK;QACjB,IAAI,CAACpB,MAAM,CAACkB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAChC;MACF;QACE,MAAM,IAAIG,KAAK,CAAC,eAAe,CAAC;;EAEtC;EAEQR,gBAAgBA,CAAA;IACtB,IAAI,CAACV,UAAU,GAAG,IAAI;EACxB;CACD;AA3CYN,cAAc,GAAAyB,UAAA,EAL1B3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW5B,cAAc,CA2C1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}