{"ast":null,"code":"\"use strict\";\n\n/*import { Component} from '@angular/core';\nimport { Router} from '@angular/router';\nimport { AuthService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  email: string = '';\n  password: string = '';\n  errorLogin: boolean = false;\n  errorMessage: string = '';\n\n  constructor (private authService:AuthService,private router: Router){}\n\n  async login() {\n    try {\n      this.errorLogin = false;\n      const isUserLoggedIn = await this.authService.login(this.email, this.password).toPromise();\n      if (isUserLoggedIn) {\n        const userRole = localStorage.getItem('userrole');\n        const roleRouteMap: { [key: string]: string } = {\n          'service': '/menu',\n          'chefe': '/cozinha',\n          'admin': '/admin'\n        };\n\n        if (userRole !== null && userRole in roleRouteMap) {\n          const targetRoute = roleRouteMap[userRole];\n          this.router.navigate([targetRoute]);\n        } else {\n          throw new Error('Invalid role');\n        }\n      } else {\n        this.errorLogin = true;\n        throw new Error('Invalid login');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      this.errorLogin = true;\n    }\n  }\n}*/","map":{"version":3,"names":[],"sources":["C:\\Users\\misle\\Desktop\\Burguer-M-V\\my-first-project\\src\\app\\components\\login\\login.component.ts"],"sourcesContent":["/*import { Component} from '@angular/core';\nimport { Router} from '@angular/router';\nimport { AuthService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  email: string = '';\n  password: string = '';\n  errorLogin: boolean = false;\n  errorMessage: string = '';\n\n  constructor (private authService:AuthService,private router: Router){}\n\n  async login() {\n    try {\n      this.errorLogin = false;\n      const isUserLoggedIn = await this.authService.login(this.email, this.password).toPromise();\n      if (isUserLoggedIn) {\n        const userRole = localStorage.getItem('userrole');\n        const roleRouteMap: { [key: string]: string } = {\n          'service': '/menu',\n          'chefe': '/cozinha',\n          'admin': '/admin'\n        };\n\n        if (userRole !== null && userRole in roleRouteMap) {\n          const targetRoute = roleRouteMap[userRole];\n          this.router.navigate([targetRoute]);\n        } else {\n          throw new Error('Invalid role');\n        }\n      } else {\n        this.errorLogin = true;\n        throw new Error('Invalid login');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      this.errorLogin = true;\n    }\n  }\n}*/\n\n\n\n\n"],"mappings":";;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}