{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/misle/Desktop/Burguer-M-V/my-first-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport class LoginComponent {\n  constructor(router) {\n    this.router = router;\n    this.email = '';\n    this.password = '';\n    this.errorLogin = false;\n    this.errorMessage = '';\n  }\n  login() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.errorLogin = false;\n        const isUserLoggedIn = yield _this.authService.login(_this.email, _this.password).toPromise();\n        if (isUserLoggedIn) {\n          const userRole = localStorage.getItem('acessRole');\n          const roleRouteMap = {\n            'service': '/menu',\n            'chefe': '/cozinha',\n            'admin': '/admin'\n          };\n          if (userRole !== null && userRole in roleRouteMap) {\n            const targetRoute = roleRouteMap[userRole];\n            _this.router.navigate([targetRoute]);\n          } else {\n            throw new Error('Invalid role');\n          }\n        } else {\n          _this.errorLogin = true;\n          throw new Error('Invalid login');\n        }\n      } catch (error) {\n        console.error('Login error:', error);\n        _this.errorLogin = true;\n      }\n    })();\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 10,\n  vars: 1,\n  consts: [[3, \"ngSubmit\"], [\"type\", \"email\", \"name\", \"email\", \"required\", \"\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\"], [\"type\", \"submit\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"error-message\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(1, \"label\");\n      i0.ɵɵtext(2, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"input\", 1);\n      i0.ɵɵelementStart(4, \"label\");\n      i0.ɵɵtext(5, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 2);\n      i0.ɵɵelementStart(7, \"button\", 3);\n      i0.ɵɵtext(8, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 2, 1, \"div\", 4);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n    }\n  },\n  dependencies: [i2.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMessage","LoginComponent","constructor","router","email","password","errorLogin","login","_this","_asyncToGenerator","isUserLoggedIn","authService","toPromise","userRole","localStorage","getItem","roleRouteMap","targetRoute","navigate","Error","error","console","ɵɵdirectiveInject","i1","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtemplate","LoginComponent_div_9_Template","ɵɵproperty"],"sources":["C:\\Users\\misle\\Desktop\\Burguer-M-V\\my-first-project\\src\\app\\components\\login\\login.component.ts","C:\\Users\\misle\\Desktop\\Burguer-M-V\\my-first-project\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component} from '@angular/core';\nimport { Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  email: string = '';\n  password: string = '';\n  errorLogin: boolean = false;\n  errorMessage: string = '';\n\n  constructor (private router: Router){}\n\n  async login() {\n    try {\n      this.errorLogin = false;\n      const isUserLoggedIn = await this.authService.login(this.email, this.password).toPromise();\n      if (isUserLoggedIn) {\n        const userRole = localStorage.getItem('acessRole');\n        const roleRouteMap: { [key: string]: string } = {\n          'service': '/menu',\n          'chefe': '/cozinha',\n          'admin': '/admin'\n        };\n\n        if (userRole !== null && userRole in roleRouteMap) {\n          const targetRoute = roleRouteMap[userRole];\n          this.router.navigate([targetRoute]);\n        } else {\n          throw new Error('Invalid role');\n        }\n      } else {\n        this.errorLogin = true;\n        throw new Error('Invalid login');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      this.errorLogin = true;\n    }\n  }\n}\n\n\n\n\n","<form (ngSubmit)=\"login()\">\n  <label>Email:</label>\n  <input type=\"email\"  name=\"email\" required>\n\n  <label>Password:</label>\n  <input type=\"password\"  name=\"password\" required>\n\n  <button type=\"submit\">Login</button>\n</form>\n<div *ngIf=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\n\n"],"mappings":";;;;;;;ICSAA,EAAA,CAAAC,cAAA,aAAgD;IAAAD,EAAA,CAAAE,MAAA,GAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAAxBH,EAAA,CAAAI,SAAA,GAAkB;IAAlBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,YAAA,CAAkB;;;ADAlE,OAAM,MAAOC,cAAc;EAMzBC,YAAqBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAL3B,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,UAAU,GAAY,KAAK;IAC3B,KAAAN,YAAY,GAAW,EAAE;EAEY;EAE/BO,KAAKA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACT,IAAI;QACFD,KAAI,CAACF,UAAU,GAAG,KAAK;QACvB,MAAMI,cAAc,SAASF,KAAI,CAACG,WAAW,CAACJ,KAAK,CAACC,KAAI,CAACJ,KAAK,EAAEI,KAAI,CAACH,QAAQ,CAAC,CAACO,SAAS,EAAE;QAC1F,IAAIF,cAAc,EAAE;UAClB,MAAMG,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;UAClD,MAAMC,YAAY,GAA8B;YAC9C,SAAS,EAAE,OAAO;YAClB,OAAO,EAAE,UAAU;YACnB,OAAO,EAAE;WACV;UAED,IAAIH,QAAQ,KAAK,IAAI,IAAIA,QAAQ,IAAIG,YAAY,EAAE;YACjD,MAAMC,WAAW,GAAGD,YAAY,CAACH,QAAQ,CAAC;YAC1CL,KAAI,CAACL,MAAM,CAACe,QAAQ,CAAC,CAACD,WAAW,CAAC,CAAC;WACpC,MAAM;YACL,MAAM,IAAIE,KAAK,CAAC,cAAc,CAAC;;SAElC,MAAM;UACLX,KAAI,CAACF,UAAU,GAAG,IAAI;UACtB,MAAM,IAAIa,KAAK,CAAC,eAAe,CAAC;;OAEnC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACpCZ,KAAI,CAACF,UAAU,GAAG,IAAI;;IACvB;EACH;;SAlCWL,cAAc;;mBAAdA,MAAc,EAAAR,EAAA,CAAA6B,iBAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;;QAAdvB,MAAc;EAAAwB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT3BtC,EAAA,CAAAC,cAAA,cAA2B;MAArBD,EAAA,CAAAwC,UAAA,sBAAAC,iDAAA;QAAA,OAAYF,GAAA,CAAAzB,KAAA,EAAO;MAAA,EAAC;MACxBd,EAAA,CAAAC,cAAA,YAAO;MAAAD,EAAA,CAAAE,MAAA,aAAM;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACrBH,EAAA,CAAA0C,SAAA,eAA2C;MAE3C1C,EAAA,CAAAC,cAAA,YAAO;MAAAD,EAAA,CAAAE,MAAA,gBAAS;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACxBH,EAAA,CAAA0C,SAAA,eAAiD;MAEjD1C,EAAA,CAAAC,cAAA,gBAAsB;MAAAD,EAAA,CAAAE,MAAA,YAAK;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAEtCH,EAAA,CAAA2C,UAAA,IAAAC,6BAAA,iBAAwE;;;MAAlE5C,EAAA,CAAAI,SAAA,GAAkB;MAAlBJ,EAAA,CAAA6C,UAAA,SAAAN,GAAA,CAAAhC,YAAA,CAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}