{"ast":null,"code":"var _class;\nimport { catchError, map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n  }\n  login(email, password) {\n    const loginUser = {\n      email,\n      password\n    };\n    return this.http.post('http://localhost:8080/login', loginUser).pipe(map(response => {\n      if (response.acessToken) {\n        localStorage.setItem('acessToken', response.acessToken);\n        localStorage.setItem('acessRole', response.user.role);\n        localStorage.setItem('acessName', response.user.name);\n        localStorage.setItem('acessEmail', response.user.email);\n        return true;\n      } else {\n        throw new Error(\"Inválidos\");\n      }\n    }), catchError(error => {\n      console.log('Erro no login', error);\n      throw new Error(\"Ocorreu um erro durante o login. Por favor, tente novamente\");\n    }));\n  }\n  isUserLoggedIn() {\n    return localStorage.getItem('token') !== null;\n  }\n  UserEmail() {\n    return localStorage.getItem('userEmail');\n  }\n  TokenStorage(token) {\n    localStorage.setItem('token', token);\n  }\n  Logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userEmail');\n    this.router.navigate(['']);\n  }\n  Username() {\n    return localStorage.getItem('username');\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["catchError","map","AuthService","constructor","http","router","login","email","password","loginUser","post","pipe","response","acessToken","localStorage","setItem","user","role","name","Error","error","console","log","isUserLoggedIn","getItem","UserEmail","TokenStorage","token","Logout","removeItem","navigate","Username","i0","ɵɵinject","i1","HttpClient","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\misle\\Desktop\\Burguer-M-V\\my-first-project\\src\\app\\components\\services\\authentication.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { catchError, map } from \"rxjs/operators\";\nimport { Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private http: HttpClient, private router: Router) {}\n\n  login(email: string, password: string): Observable<boolean> {\n    const loginUser = { email, password };\n\n    return this.http.post<any>('http://localhost:8080/login', loginUser).pipe(\n      map(response => {\n        if (response.acessToken) {\n          localStorage.setItem('acessToken', response.acessToken);\n          localStorage.setItem('acessRole', response.user.role);\n          localStorage.setItem('acessName', response.user.name);\n          localStorage.setItem('acessEmail', response.user.email);\n          return true;\n        } else {\n          throw new Error(\"Inválidos\");\n        }\n      }),\n      catchError(error => {\n        console.log('Erro no login', error);\n        throw new Error(\"Ocorreu um erro durante o login. Por favor, tente novamente\");\n      })\n    );\n  }\n\n  isUserLoggedIn(): boolean {\n    return localStorage.getItem('token') !== null;\n  }\n\n  UserEmail(): string | null {\n    return localStorage.getItem('userEmail');\n  }\n\n  TokenStorage(token: string) {\n    localStorage.setItem('token', token);\n  }\n\n  Logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userEmail');\n    this.router.navigate(['']);\n  }\n\n  Username(): string | null {\n    return localStorage.getItem('username');\n  }\n}\n"],"mappings":";AAGA,SAASA,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;;;;AAMhD,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAE/DC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,MAAMC,SAAS,GAAG;MAAEF,KAAK;MAAEC;IAAQ,CAAE;IAErC,OAAO,IAAI,CAACJ,IAAI,CAACM,IAAI,CAAM,6BAA6B,EAAED,SAAS,CAAC,CAACE,IAAI,CACvEV,GAAG,CAACW,QAAQ,IAAG;MACb,IAAIA,QAAQ,CAACC,UAAU,EAAE;QACvBC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEH,QAAQ,CAACC,UAAU,CAAC;QACvDC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEH,QAAQ,CAACI,IAAI,CAACC,IAAI,CAAC;QACrDH,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEH,QAAQ,CAACI,IAAI,CAACE,IAAI,CAAC;QACrDJ,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEH,QAAQ,CAACI,IAAI,CAACT,KAAK,CAAC;QACvD,OAAO,IAAI;OACZ,MAAM;QACL,MAAM,IAAIY,KAAK,CAAC,WAAW,CAAC;;IAEhC,CAAC,CAAC,EACFnB,UAAU,CAACoB,KAAK,IAAG;MACjBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,KAAK,CAAC;MACnC,MAAM,IAAID,KAAK,CAAC,6DAA6D,CAAC;IAChF,CAAC,CAAC,CACH;EACH;EAEAI,cAAcA,CAAA;IACZ,OAAOT,YAAY,CAACU,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI;EAC/C;EAEAC,SAASA,CAAA;IACP,OAAOX,YAAY,CAACU,OAAO,CAAC,WAAW,CAAC;EAC1C;EAEAE,YAAYA,CAACC,KAAa;IACxBb,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEY,KAAK,CAAC;EACtC;EAEAC,MAAMA,CAAA;IACJd,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;IAChCf,YAAY,CAACe,UAAU,CAAC,WAAW,CAAC;IACpC,IAAI,CAACxB,MAAM,CAACyB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B;EAEAC,QAAQA,CAAA;IACN,OAAOjB,YAAY,CAACU,OAAO,CAAC,UAAU,CAAC;EACzC;;SA7CWtB,WAAW;;mBAAXA,MAAW,EAAA8B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;SAAXnC,MAAW;EAAAoC,OAAA,EAAXpC,MAAW,CAAAqC,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}